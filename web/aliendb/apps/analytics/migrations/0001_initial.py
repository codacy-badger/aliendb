# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-08-11 02:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.CharField(max_length=7, primary_key=True, serialize=False, unique=True)),
                ('score', models.IntegerField()),
                ('is_root', models.BooleanField()),
                ('is_op', models.NullBooleanField()),
                ('is_mod', models.NullBooleanField()),
                ('is_admin', models.NullBooleanField()),
                ('is_special', models.NullBooleanField()),
                ('gilded', models.IntegerField()),
                ('characters', models.IntegerField()),
                ('words', models.IntegerField()),
                ('sentences', models.IntegerField()),
                ('polarity', models.FloatField()),
                ('subjectivity', models.FloatField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.CharField(max_length=7, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=300)),
                ('author', models.CharField(max_length=20)),
                ('rank', models.IntegerField()),
                ('rank_previous', models.IntegerField()),
                ('rank_peak', models.IntegerField()),
                ('score', models.IntegerField()),
                ('num_comments', models.IntegerField()),
                ('polarity', models.FloatField()),
                ('subjectivity', models.FloatField()),
                ('domain', models.CharField(max_length=64)),
                ('link_flair_text', models.CharField(max_length=64)),
                ('upvote_ratio', models.FloatField()),
                ('stickied', models.BooleanField()),
                ('over_18', models.BooleanField()),
                ('spoiler', models.BooleanField()),
                ('locked', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionNumComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_comments', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Submission')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Submission')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionUpvoteRatio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upvote_ratio', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Submission')),
            ],
        ),
        migrations.CreateModel(
            name='Subreddit',
            fields=[
                ('name', models.CharField(max_length=21, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('score', models.IntegerField(default=0)),
                ('num_comments', models.IntegerField(default=0)),
                ('tracked_submissions', models.IntegerField(default=0)),
                ('tracked_comments', models.IntegerField(default=0)),
                ('average_upvote_ratio', models.FloatField(default=0)),
                ('average_is_op', models.FloatField(default=0)),
                ('average_is_mod', models.FloatField(default=0)),
                ('average_is_admin', models.FloatField(default=0)),
                ('average_is_special', models.FloatField(default=0)),
                ('average_gilded', models.FloatField(default=0)),
                ('average_submission_polarity', models.FloatField(default=0)),
                ('average_comments_polarity', models.FloatField(default=0)),
                ('average_submission_subjectivity', models.FloatField(default=0)),
                ('average_comments_subjectivity', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='submission',
            name='subreddit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Subreddit'),
        ),
        migrations.AddField(
            model_name='comment',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Submission'),
        ),
    ]